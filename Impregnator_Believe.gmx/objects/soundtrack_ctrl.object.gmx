<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIALIZE

sound_on = true;

audio_falloff_set_model(audio_falloff_linear_distance);

/*bgr_music = snd_bgr_music_river;
if (!audio_is_playing(bgr_music)){
    audio_play_sound(bgr_music,10,1);
}*/

//set snd volume
audio_sound_gain(snd_splash,0.5,0);
audio_sound_gain(snd_bgr_music_river,0.35,0);
audio_sound_gain(snd_soundtrack_1,0.5,0);
audio_sound_gain(snd_soundtrack_2,0.5,0);
audio_sound_gain(snd_soundtrack_3,0.5,0);
audio_sound_gain(snd_soundtrack_4,0.5,0);

soundtrack_list = ds_list_create();
var song_1 = snd_soundtrack_1;
var song_2 = snd_soundtrack_2;
var song_3 = snd_soundtrack_3;
var song_4 = snd_soundtrack_4;
ds_list_add(soundtrack_list,song_1,song_2,song_3,song_4);

var current_soundtrack = ds_list_find_value(soundtrack_list,irandom(ds_list_size(soundtrack_list)));

if (!audio_is_playing(current_soundtrack)){
    audio_play_sound(current_soundtrack,10,0);
}
set_alarm_for_next_song(current_soundtrack,1);
alarm[0] = 25;//hooraaay sound
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var current_soundtrack = ds_list_find_value(soundtrack_list,irandom(ds_list_size(soundtrack_list)-1));
if (!audio_is_playing(current_soundtrack)){
    audio_play_sound(current_soundtrack,10,0);
}
set_alarm_for_next_song(current_soundtrack,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_hooray_noncomercial,10,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
